name: API Deployment

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: List directory structure
      run: |
        echo "Current directory: $(pwd)"
        echo "Directory contents:"
        ls -la
        echo "Searching for api directories:"
        find . -type d -name "api" -o -name "API" | sort
        echo "Searching for package.json files:"
        find . -name "package.json" | sort
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
    
    - name: Install dependencies
      run: |
        # Rechercher le répertoire api avec un package.json
        API_DIR=$(find . -type d -name "api" -o -name "API" | sort | head -n 1)
        
        if [ -z "$API_DIR" ]; then
          echo "Aucun répertoire api ou API trouvé"
          exit 1
        fi
        
        echo "Utilisation du répertoire: $API_DIR"
        
        if [ -f "$API_DIR/package.json" ]; then
          cd "$API_DIR"
          npm install
        else
          echo "Pas de package.json trouvé dans $API_DIR"
          exit 1
        fi
    
    - name: Run tests
      run: |
        # Rechercher le répertoire api avec un package.json
        API_DIR=$(find . -type d -name "api" -o -name "API" | sort | head -n 1)
        
        if [ -z "$API_DIR" ]; then
          echo "Aucun répertoire api ou API trouvé"
          exit 1
        fi
        
        echo "Utilisation du répertoire: $API_DIR"
        
        if [ -f "$API_DIR/package.json" ]; then
          cd "$API_DIR"
          npm test || true
        else
          echo "Pas de package.json trouvé dans $API_DIR"
          exit 1
        fi
    
    - name: Deploy to production server
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT }}
        script: |
          cd /path/to/your/app/api
          git pull
          npm install
          pm2 restart api || pm2 start index.js --name api --port 3001 