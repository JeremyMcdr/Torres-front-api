name: Deploy FRONT

on:
  push:
    branches: [ main ]
    paths:
      - 'FRONT/**'
      - '.github/workflows/front-deploy.yml'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      
      - name: Build and push FRONT Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./FRONT
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/torres-front:latest
      
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            # Créer un répertoire pour le projet s'il n'existe pas
            mkdir -p ~/torres-app
            
            # Télécharger l'image Docker mise à jour
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/torres-front:latest
            
            # Arrêter et supprimer le conteneur existant s'il existe
            docker stop torres-front || true
            docker rm torres-front || true
            
            # Lancer le nouveau conteneur
            docker run -d --name torres-front \
              -p 8080:80 \
              --restart always \
              --link torres-api:api \
              ${{ secrets.DOCKERHUB_USERNAME }}/torres-front:latest
            
            # Nettoyer les images non utilisées
            docker image prune -f 